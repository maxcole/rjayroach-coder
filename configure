#!/bin/bash

# ./configure.yml -t user-config $*
# ./configure.yml -t user-install $*
# sudo -u ansible /home/ubuntu/configure.yml -t user-admin $*
# ./configure.yml -t user-admin $*

# Parse command line options
FORCE=false
while getopts "f" opt; do
    case $opt in
        f)
            FORCE=true
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
    esac
done

# Shift to get the username after options
shift $((OPTIND-1))
NEW_USER="$1"

# Check if user already exists
if id "$NEW_USER" &>/dev/null; then
   if [ "$FORCE" = true ]; then
       echo "Force option enabled. Deleting existing user '$NEW_USER'..."
       # Kill any processes owned by the user
       sudo pkill -u "$NEW_USER" || true
       
       # Remove the user and their home directory
       sudo deluser --remove-home "$NEW_USER" 2>/dev/null || {
           echo "Warning: Could not remove home directory, continuing..."
           sudo deluser "$NEW_USER"
       }
       echo "User '$NEW_USER' deleted."
   else
       echo "User '$NEW_USER' already exists."
       read -p "Do you want to delete the existing user and recreate? (y/N): " -n 1 -r
       echo
       if [[ $REPLY =~ ^[Yy]$ ]]; then
           # Kill any processes owned by the user
           sudo pkill -u "$NEW_USER" || true
           
           # Remove the user and their home directory
           sudo deluser --remove-home "$NEW_USER" 2>/dev/null || {
               echo "Warning: Could not remove home directory, continuing..."
               sudo deluser "$NEW_USER"
           }
           echo "User '$NEW_USER' deleted."
       else
           echo "Exiting without changes."
           exit 0
       fi
   fi
fi

sudo adduser --disabled-password --gecos "" "$NEW_USER"
echo "$NEW_USER ALL=(ALL) NOPASSWD:ALL" | sudo tee "/etc/sudoers.d/$NEW_USER"
# Create ansible temp directory with proper permissions to avoid warning
sudo mkdir -p "/home/$NEW_USER/.ansible/tmp"
sudo chown "$NEW_USER:$NEW_USER" "/home/$NEW_USER/.ansible/tmp"
sudo chmod 755 "/home/$NEW_USER/.ansible/tmp"
# Copy config repo to new user's home directory
sudo cp -r "$(pwd)" "/home/$NEW_USER/config"
sudo chown -R "$NEW_USER:$NEW_USER" "/home/$NEW_USER/config"
# Remove the first argument (username) and any -f flag from remaining arguments
shift  # Remove username
remaining_args=()
for arg in "$@"; do
    if [[ "$arg" != "-f" ]]; then
        remaining_args+=("$arg")
    fi
done
./configure.yml -e target_user="$NEW_USER" "${remaining_args[@]}"

# ./configure.yml -t user-install -e uid=b1 $*
# ./configure.yml -t user-config -e uid=b1 $*
