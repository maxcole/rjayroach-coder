#!/usr/bin/env -S ansible-playbook -i localhost,
#!/usr/bin/env -S ansible-playbook -i hosts.yml -t host-install -t user-admin -e @secrets.enc --vault-password-file secrets.pwd
# This will be modified to work with packer when building an image
---
- name: Install and Configure Localhost
  hosts: "{{ target_hosts | default('localhost') }}"
  connection: "{{ target_connection | default('local') }}"
  become: yes
  become_user: "{{ target_user | default(lookup('env', 'USER')) }}"
  vars:
    ansible_pipelining: true
    allow_world_readable_tmpfiles: true
  tasks:

    - ansible.builtin.debug:
        var: "{{ item }}"
      loop: [ansible_env, ansible_user_id, ansible_user_dir]
      tags: [debug, never]

    - name: Set user shell to zsh
      ansible.builtin.user:
        name: "{{ target_user | default(lookup('env', 'USER')) }}"
        shell: /bin/zsh
      become: yes
      become_user: root

    - name: Setup XDG directories
      ansible.builtin.include_role:
        name: xdg
      tags: [always]

      # TODO: the loop is based on specified roles
    - name: "Create dirs in {{ ansible_user_dir }}/.config to stow symlinks"
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/.config/{{ item }}"
        state: directory
        mode: '0755'
      loop: [git, nvim, pry, rails, tmux, tmuxinator, zsh]

    - name: Install Stow
      ansible.builtin.package:
        name: [stow]
        state: present
      become: yes

    - name: Stow the basics
      ansible.builtin.shell:
        cmd: "stow {{ item }} -t {{ ansible_user_dir }}"
        chdir: "{{ ansible_user_dir }}/config/dotfiles"
      args:
        executable: /bin/zsh
      loop: [bash, git, nvim, tmux, tmuxinator, zsh]

    - name: Configure Tmux Plugins (user-admin)
      ansible.builtin.include_role:
        name: tmux
      tags: [tmux, never]


    - ansible.builtin.fail:

    - name: "Create dirs in {{ path.home }}"
      ansible.builtin.file:
        path: "{{ path.home }}/{{ item }}"
        state: directory
        mode: '0755'
      loop: [.aws, .ssh, .local, .local/share, .local/share/python, .local/bin]

      # NOTE: This is the last thing to do
    - name: Create credentials for encrypted values
      ansible.builtin.copy:
        dest: "{{ item.dest }}"
        content: |
          # DO NOT EDIT; This file was generated by Ansible from {{ playbook_dir }}/secrets.enc
          {% for k, v in item.content.items() %}
          {{ k }}{% if v is not none %}={{ v }}{% endif %}

          {% endfor %}
      loop: "{{ _secrets }}"
