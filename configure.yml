#!/usr/bin/env -S ansible-playbook -i hosts.yml -t noop -e @secrets.enc
# ansible-playbook -e @secrets.enc --vault-password-file secrets.pass
# This will be modified to work with packer when building an image
---
- name: Install and Configure Localhost
  hosts: localhost
  connection: local 
  vars:
    user:
      HOME: "/home/{{ uid }}"
    stow:
      src: dotfiles
      target: ~
    git:
      prefix: git@github.com
      repos: {}
  tasks:

    - ansible.builtin.fail:
        msg: "must provide uid"
      when: uid is not defined
      tags: [always]

    - ansible.builtin.copy:
        dest: "{{ item.dest }}"
        content: |
          # DO NOT EDIT; This file was generated by Ansible from {{ playbook_dir }}/secrets.enc
          {% for k, v in item.content.items() %}
          {{ k }}={{ v }}
          {% endfor %}
      become: yes
      become_user: "{{ uid }}"
      loop: "{{ _secrets }}"
      tags: [user-config]
    - ansible.builtin.fail:
      tags: [always]

    - ansible.builtin.shell:
        cmd: "stow {{ item }} -t {{ user.HOME }}"
        chdir: "{{ user.HOME }}/config/dotfiles"
      args:
        executable: /bin/zsh
      loop: [bash, git, nvim, pry, rails, rbenv, ssh, tmux, tmuxinator, zsh]
      become: yes
      become_user: "{{ uid }}"
      tags: [user-config]
        
    - block:
      - name: Find all sub-directories
        ansible.builtin.find:
          paths: packages
          recurse: no
          file_type: directory
        register: packages_dir

      - set_fact:
          packages: "{{ packages_dir.files | map(attribute='path') }}"
      when: packages is not defined
      tags: [always]

    - debug:
        var: "{{ item }}"
      loop: [packages, mods]
      tags: [debug]

    - include_tasks:
        file: package.yml
      vars:
        package: "{{ item }}"
      loop: "{{ packages.keys() }}"
      tags: [always]

    - include_role:
        name: "{{ item }}"
      vars:
        ansible_become: yes
        ansible_become_user: "{{ uid }}"
      loop: "{{ mods.keys() }}"
      tags: [always]

    - ansible.builtin.debug:
        var: "{{ item }}"
      loop: [roles, packages]
      tags: [user-config]
